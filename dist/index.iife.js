var kvStore=function(e){"use strict";class t{constructor(e,t,s){this.key=e,this.oldValue=t,this.value=s}}const s=Symbol("store"),r=Symbol("observers"),o=Object.seal(class{constructor(){this[s]=new Map,this[r]=new Set}get(e){return Promise.resolve(this[s].get(e))}set(e,r){const o=new t(e,this[s].get(e),r);return new Promise((e,t)=>{void 0===o.value?this[s].delete(o.key)?e():t(new Error("Key was not found.")):(this[s].set(o.key,o.value),e())}).then(this.notify(o))}delete(e){const r=new t(e,this[s].get(e));return new Promise((e,t)=>{this[s].delete(r.key)?e():t(new Error("Key was not found."))}).then(this.notify(r))}observe(e){return new Promise((t,s)=>{"function"==typeof e?(this[r].add(e),t()):s(new Error("Callback should be of type 'function'."))})}disconnect(e){return new Promise((t,s)=>{this[r].delete(e)?t():s(new Error("Callback was not registered."))})}notify(e){this[r].forEach(t=>t(e))}});return e.kvStore=o,e}({});
//# sourceMappingURL=index.iife.js.map
